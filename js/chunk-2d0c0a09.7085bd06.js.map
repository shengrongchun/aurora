{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/r/r.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","roxygen","constants","keywords","special","token","tokenizer","root","include","cases","@keywords","@constants","@default","@roxygen","@eos","next","numbers","operators","strings","stringBody","@special","dblStringBody"],"mappings":"kHAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAID,EAAO,CACdE,SAAU,CACNC,YAAa,KAEjBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAExBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGjBN,EAAW,CAClBQ,aAAc,GACdC,aAAc,KACdC,QAAS,CACL,SACA,UACA,QACA,UACA,YACA,WACA,WACA,YACA,QACA,WACA,SACA,YACA,UACA,kBACA,aACA,uBACA,WACA,eACA,gBACA,iBACA,UACA,WACA,UACA,qBACA,cACA,qBACA,UACA,YACA,UACA,QACA,QACA,cACA,WACA,YACA,QACA,UACA,SACA,UAEJC,UAAW,CACP,OACA,QACA,OACA,KACA,MACA,OACA,cACA,WACA,cACA,iBACA,IACA,IACA,UACA,UACA,YACA,aACA,KACA,oBAEJC,SAAU,CACN,QACA,OACA,SACA,KACA,OACA,MACA,KACA,SACA,QACA,QACA,WACA,YACA,UACA,SACA,WACA,UACA,OACA,UACA,SACA,UACA,SACA,aACA,SACA,UACA,UACA,SACA,SACA,UAEJC,QAAS,CACL,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAEJV,SAAU,CACN,CAAEE,KAAM,IAAKC,MAAO,IAAKQ,MAAO,mBAChC,CAAET,KAAM,IAAKC,MAAO,IAAKQ,MAAO,qBAChC,CAAET,KAAM,IAAKC,MAAO,IAAKQ,MAAO,0BAEpCC,UAAW,CACPC,KAAM,CACF,CAAEC,QAAS,YACX,CAAEA,QAAS,YACX,CAAC,aAAc,aACf,CAAEA,QAAS,cACX,CAAC,KAAM,cAAe,YACtB,CAAC,UAAW,WACZ,CAAC,MAAO,SACR,CAAC,QAAS,aACV,CAAC,eAAgB,OACjB,CAAC,cAAe,CACRC,MAAO,CACHC,YAAa,UACbC,aAAc,WACdC,WAAY,iBAK5BX,QAAS,CACL,CAAC,OAAQ,CACDQ,MAAO,CACHI,WAAY,MACZC,OAAQ,CAAET,MAAO,cAAeU,KAAM,QACtCH,WAAY,iBAGxB,CAAC,MAAO,CACAH,MAAO,CACHK,OAAQ,CAAET,MAAO,cAAeU,KAAM,QACtCH,WAAY,iBAGxB,CAAC,KAAM,CAAEP,MAAO,cAAeU,KAAM,UAGzCC,QAAS,CACL,CAAC,oBAAqB,cACtB,CAAC,gCAAiC,WAGtCC,UAAW,CACP,CAAC,UAAW,YACZ,CAAC,UAAW,YACZ,CAAC,YAAa,YACd,CAAC,OAAQ,YACT,CAAC,KAAM,YACP,CAAC,KAAM,YACP,CAAC,OAAQ,YACT,CAAC,KAAM,YACP,CAAC,KAAM,YACP,CAAC,mBAAoB,aAGzBC,QAAS,CACL,CAAC,IAAK,gBAAiB,eACvB,CAAC,IAAK,gBAAiB,mBAE3BC,WAAY,CACR,CAAC,MAAO,CACAV,MAAO,CACHW,WAAY,SACZR,WAAY,iBAGxB,CAAC,IAAK,gBAAiB,WACvB,CAAC,IAAK,WAEVS,cAAe,CACX,CAAC,MAAO,CACAZ,MAAO,CACHW,WAAY,SACZR,WAAY,iBAGxB,CAAC,IAAK,gBAAiB,WACvB,CAAC,IAAK","file":"js/chunk-2d0c0a09.7085bd06.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.r',\r\n    roxygen: [\r\n        '@param',\r\n        '@return',\r\n        '@name',\r\n        '@rdname',\r\n        '@examples',\r\n        '@include',\r\n        '@docType',\r\n        '@S3method',\r\n        '@TODO',\r\n        '@aliases',\r\n        '@alias',\r\n        '@assignee',\r\n        '@author',\r\n        '@callGraphDepth',\r\n        '@callGraph',\r\n        '@callGraphPrimitives',\r\n        '@concept',\r\n        '@exportClass',\r\n        '@exportMethod',\r\n        '@exportPattern',\r\n        '@export',\r\n        '@formals',\r\n        '@format',\r\n        '@importClassesFrom',\r\n        '@importFrom',\r\n        '@importMethodsFrom',\r\n        '@import',\r\n        '@keywords',\r\n        '@method',\r\n        '@nord',\r\n        '@note',\r\n        '@references',\r\n        '@seealso',\r\n        '@setClass',\r\n        '@slot',\r\n        '@source',\r\n        '@title',\r\n        '@usage'\r\n    ],\r\n    constants: [\r\n        'NULL',\r\n        'FALSE',\r\n        'TRUE',\r\n        'NA',\r\n        'Inf',\r\n        'NaN ',\r\n        'NA_integer_',\r\n        'NA_real_',\r\n        'NA_complex_',\r\n        'NA_character_ ',\r\n        'T',\r\n        'F',\r\n        'LETTERS',\r\n        'letters',\r\n        'month.abb',\r\n        'month.name',\r\n        'pi',\r\n        'R.version.string'\r\n    ],\r\n    keywords: [\r\n        'break',\r\n        'next',\r\n        'return',\r\n        'if',\r\n        'else',\r\n        'for',\r\n        'in',\r\n        'repeat',\r\n        'while',\r\n        'array',\r\n        'category',\r\n        'character',\r\n        'complex',\r\n        'double',\r\n        'function',\r\n        'integer',\r\n        'list',\r\n        'logical',\r\n        'matrix',\r\n        'numeric',\r\n        'vector',\r\n        'data.frame',\r\n        'factor',\r\n        'library',\r\n        'require',\r\n        'attach',\r\n        'detach',\r\n        'source'\r\n    ],\r\n    special: [\r\n        '\\\\n',\r\n        '\\\\r',\r\n        '\\\\t',\r\n        '\\\\b',\r\n        '\\\\a',\r\n        '\\\\f',\r\n        '\\\\v',\r\n        '\\\\\\'',\r\n        '\\\\\"',\r\n        '\\\\\\\\'\r\n    ],\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            { include: '@operators' },\r\n            [/#'/, 'comment.doc', '@roxygen'],\r\n            [/(^#.*$)/, 'comment'],\r\n            [/\\s+/, 'white'],\r\n            [/[,:;]/, 'delimiter'],\r\n            [/@[a-zA-Z]\\w*/, 'tag'],\r\n            [/[a-zA-Z]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }]\r\n        ],\r\n        // Recognize Roxygen comments\r\n        roxygen: [\r\n            [/@\\w+/, {\r\n                    cases: {\r\n                        '@roxygen': 'tag',\r\n                        '@eos': { token: 'comment.doc', next: '@pop' },\r\n                        '@default': 'comment.doc'\r\n                    }\r\n                }],\r\n            [/\\s+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'comment.doc', next: '@pop' },\r\n                        '@default': 'comment.doc'\r\n                    }\r\n                }],\r\n            [/.*/, { token: 'comment.doc', next: '@pop' }]\r\n        ],\r\n        // Recognize positives, negatives, decimals, imaginaries, and scientific notation\r\n        numbers: [\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?/, 'number']\r\n        ],\r\n        // Recognize operators\r\n        operators: [\r\n            [/<{1,2}-/, 'operator'],\r\n            [/->{1,2}/, 'operator'],\r\n            [/%[^%\\s]+%/, 'operator'],\r\n            [/\\*\\*/, 'operator'],\r\n            [/%%/, 'operator'],\r\n            [/&&/, 'operator'],\r\n            [/\\|\\|/, 'operator'],\r\n            [/<</, 'operator'],\r\n            [/>>/, 'operator'],\r\n            [/[-+=&|!<>^~*/:$]/, 'operator']\r\n        ],\r\n        // Recognize strings, including those broken across lines\r\n        strings: [\r\n            [/'/, 'string.escape', '@stringBody'],\r\n            [/\"/, 'string.escape', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@special': 'string',\r\n                        '@default': 'error-token'\r\n                    }\r\n                }],\r\n            [/'/, 'string.escape', '@popall'],\r\n            [/./, 'string'],\r\n        ],\r\n        dblStringBody: [\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@special': 'string',\r\n                        '@default': 'error-token'\r\n                    }\r\n                }],\r\n            [/\"/, 'string.escape', '@popall'],\r\n            [/./, 'string'],\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":""}