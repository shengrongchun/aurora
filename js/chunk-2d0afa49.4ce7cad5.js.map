{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","variable","tokenizer","root","include","token","next","arguments","cases","@eos","@default","whitespace","comment","strings","stringBody","dblStringBody"],"mappings":"kHAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAID,EAAO,CACdE,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,MAEzBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,OAGlBJ,EAAW,CAClBM,aAAc,GACdC,aAAc,cACdC,SAAU,cACVC,UAAW,CACPC,KAAM,CACF,CAAEC,QAAS,eACX,CAAEA,QAAS,YACX,CAAC,iBAAkB,CAAC,UAAW,KAC/B,CAAC,oBAAqB,CAAC,UAAW,GAAI,CAAEC,MAAO,WAAYC,KAAM,gBACjE,CAAC,sHAAuH,CAAED,MAAO,UAAWC,KAAM,gBAEtJC,UAAW,CACP,CAAEH,QAAS,eACX,CAAEA,QAAS,YACX,CAAC,cAAe,CACRI,MAAO,CACHC,OAAQ,CAAEJ,MAAO,WAAYC,KAAM,WACnCI,WAAY,cAGxB,CAAC,KAAM,CACCF,MAAO,CACHC,OAAQ,GACRC,WAAY,MAGxB,CAAC,IAAK,CACEF,MAAO,CACHC,OAAQ,CAAEJ,MAAO,GAAIC,KAAM,WAC3BI,WAAY,OAK5BC,WAAY,CACR,CAAC,MAAO,CACAH,MAAO,CACHC,OAAQ,CAAEJ,MAAO,GAAIC,KAAM,WAC3BI,WAAY,OAI5BE,QAAS,CACL,CAAC,UAAW,UAAW,YAG3BC,QAAS,CACL,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,eAChB,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,mBAEpBC,WAAY,CACR,CAAC,WAAY,CACLN,MAAO,CACHC,OAAQ,CAAEJ,MAAO,SAAUC,KAAM,WACjCI,WAAY,YAGxB,CAAC,MAAO,iBACR,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,QAChB,CAAC,cAAe,YAChB,CAAC,MAAO,UACR,CAAC,IAAK,SAAU,YAEpBK,cAAe,CACX,CAAC,WAAY,CACLP,MAAO,CACHC,OAAQ,CAAEJ,MAAO,SAAUC,KAAM,WACjCI,WAAY,YAGxB,CAAC,MAAO,iBACR,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,QAChB,CAAC,cAAe,YAChB,CAAC,MAAO,UACR,CAAC,IAAK,SAAU","file":"js/chunk-2d0afa49.4ce7cad5.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.dockerfile',\r\n    variable: /\\${?[\\w]+}?/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            [/(ONBUILD)(\\s+)/, ['keyword', '']],\r\n            [/(ENV)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\r\n            [/(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/, { token: 'keyword', next: '@arguments' }]\r\n        ],\r\n        arguments: [\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [/(@variable)/, {\r\n                    cases: {\r\n                        '@eos': { token: 'variable', next: '@popall' },\r\n                        '@default': 'variable'\r\n                    }\r\n                }],\r\n            [/\\\\/, {\r\n                    cases: {\r\n                        '@eos': '',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            [/./, {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n        ],\r\n        // Deal with white space, including comments\r\n        whitespace: [\r\n            [/\\s+/, {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n        ],\r\n        comment: [\r\n            [/(^#.*$)/, 'comment', '@popall']\r\n        ],\r\n        // Recognize strings, including those broken across lines with \\ (but not without)\r\n        strings: [\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@stringBody'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/[^\\\\\\$']/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/\\\\./, 'string.escape'],\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ],\r\n        dblStringBody: [\r\n            [/[^\\\\\\$\"]/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":""}